搞清楚方向：首先当前目的不是系统研究图像处理或者上位机开发甚至不是系统学习某一个算法，一些基本概念你已经有了，现在要做的是先暂时不求甚解、尽快找到一个能成功实现所需功能的方向，然后对这个方向的内容先用Matlab+GUIDE实现而后用C++结合OpenCV实现最后QT来上位机出成品（Qt上位机为最终形态，开始时也可用matlab做图形界面）

目前方向：大致上分两步，一是通过处理获得便于计数的目标图像，二是计数
1、变灰度图后膨胀腐蚀，得出大小适合边界粘连较少的图像。//此处存疑：先变二值图像还是先进行膨胀腐蚀？学习开闭图像的概念
2、而后若分析圆形则Canny+霍夫变换（可在Matlab中尝试，不作为主要方向）
3、分析不规则形状则变二值图像用连通区域分析法：bwlabel系列函数计数小连通区域，bwarea算面积。

https://blog.csdn.net/akadiao/article/details/80864835
https://www.cnblogs.com/Dontstop/p/4680646.html


人眼成像原理
彩色图像构成方法：
1、颜色映射 Color Mapping 原理：查表映射
2、真彩色 True Color 原理：三种分量叠加

图像二维离散傅里叶变换（DFT）和快速傅里叶变换（FFT）
意义：时域变频域，展现图像的频域构成

傅里叶变换的特性及在图像处理中的应用
1、位移不变性
2、旋转特性
3、频率尺度变化
4、叠加
5、频域特性应用：滤波


直方图：表示各个亮度上点的个数或者占总点数的比例

点运算 整体/局部 增强/削弱对比度
运用线性算子对点亮度进行整体/局部处理

直方图正规化（Histogram intensity normalization）：使原有图像的亮度涵盖256个亮度级，更加清晰
直方图正规化线性可逆
直方图均衡化（Histogram equalization）：将256个亮度分为若干个级别，让图像在每个级别的点数相等，输出图像中每个亮度级点数是输入图像总点数与该亮度级范围之比，直方图均衡化是非线性不可逆的过程
阈值处理：大于某值全设为黑色，小于某值全白（即二值化）
最优阈值处理：例如Ostus（最大类间方差法）处理方法，找出一值，使得原图在直方图上以该值分类时两侧的方差最大，将此值作为阈值

群运算：
模板卷积：
模板（即卷积核），是一矩阵，例如3x3的矩阵，每个位置有特定的数字（权值）
卷积的过程即对原图上相应的3x3矩阵加权求和的过程，卷积的结果输出到新图像对应原图3x3中心点的位置

由于卷积需要正方形（如3x3，5x5）的像素点，到边界时可能不能正好取出完整的正方形，此时需要边界处理：
1、将原图边界外的点补充为黑色
2、将原图在四周无限重复

平均算子：如3x3的平均算子矩阵，矩阵中每个数都为1/9，卷积后的值为原图9个像素点的均值

中值滤波：找出原矩阵的中值，生成新图像，可用于背景提取

Canny算法提取边缘效果最好

霍夫变换可用于检测直线、圆、椭圆等

4连通和8连通概念，九宫格里，中心有一个棋子，围棋是4连通，上下左右都来一个就算把这个困住了，五子棋是8连通，周边的8个格子都可以算相邻

膨胀和腐蚀（以九宫格黑色内核为例）
膨胀是由内核一个个匹配是否击中，符合规则的点填充至内核的范围，大致上是长大一圈
腐蚀也是一个个匹配是否击中，将不符合内核规则的点删除，大致上缩小一圈

开闭运算
开运算 = 先腐蚀运算，再膨胀运算（看上去把细微连在一起的两块目标分开了） ，可消除小亮点
闭运算 = 先膨胀运算，再腐蚀运算（看上去将两个细微连接的图块封闭在一起） ，可消除小黑洞


查find函数

分割连通区域统计
小连通区域计数
连通区域 bwlabel 函数

matlab里有连通域标记的函数bwlabel，具体自己help吧
至于求连通域面积，stats=regionprops(ibw,'Area');%ibw是标记号的图
求中值也有这函数的，median（A）
别的就很随意了 

bwareaopen删除小面积对象
bwarea
imclearborder

bwboundaries和canny的区别
bw仅限于二值图像，canny可辨别普通灰度图


ostu阈值分割+连通区域法


蛇模型，对偶轮廓


HSV模型Hue色调Saturation饱和度Value明度

HSI模型H定义波长S为饱和度I为强度




